events {
    worker_connections 1024;
}

http {
    # Configuración de logs
    log_format gateway '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'upstream: $upstream_addr '
                      'request_time: $request_time';
    
    access_log /var/log/nginx/access.log gateway;
    error_log /var/log/nginx/error.log warn;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;

    # Upstream definitions
    upstream user-service {
        server user-service:8001;
        keepalive 32;
    }

    upstream nit-validation-service {
        server nit-validation-service:8002;
        keepalive 32;
    }

    upstream audit-service {
        server audit-service:8003;
        keepalive 32;
    }

    upstream auth-service {
        server auth-service:8004;
        keepalive 32;
    }

    # Mapa para CORS
    map $http_origin $cors_origin {
        default "*";
        "~^https?://localhost" "$http_origin";
        "~^https?://127.0.0.1" "$http_origin";
        "~^https?://192.168" "$http_origin";
        "~^https?://10.0" "$http_origin";
    }

    server {
        listen 80;
        server_name localhost;

        # Headers comunes para todas las rutas
        add_header X-API-Gateway "MediSupply-v1" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # CORS headers
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, X-API-Key" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "3600" always;

        # Handle OPTIONS method for CORS preflight
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # ========================================
        # USER SERVICE ROUTES
        # ========================================
        
        # Ruta específica para registro (sin /api/v1 prefix en el servicio)
        location /api/v1/users/register {
            proxy_pass http://user-service/register;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # Otras rutas de user-service
        location /api/v1/users {
            proxy_pass http://user-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # ========================================
        # NIT VALIDATION SERVICE ROUTES
        # ========================================
        
        location /api/v1/validate {
            proxy_pass http://nit-validation-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        location /api/v1/institution {
            proxy_pass http://nit-validation-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        location /api/v1/cache {
            proxy_pass http://nit-validation-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # ========================================
        # AUDIT SERVICE ROUTES
        # ========================================
        
        location /api/v1/audit {
            proxy_pass http://audit-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # ========================================
        # AUTH SERVICE ROUTES
        # ========================================
        
        # Ruta de login
        location /api/v1/auth/login {
            proxy_pass http://auth-service/api/v1/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # Ruta de verificación de token
        location /api/v1/auth/verify-token {
            proxy_pass http://auth-service/api/v1/verify-token;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # Otras rutas de auth (para futuros endpoints)
        location /api/v1/auth {
            proxy_pass http://auth-service/api/v1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # ========================================
        # HEALTH CHECKS
        # ========================================
        
        location /health/user {
            proxy_pass http://user-service/health;
            proxy_set_header Host $host;
            access_log off;
        }

        location /health/nit {
            proxy_pass http://nit-validation-service/health;
            proxy_set_header Host $host;
            access_log off;
        }

        location /health/audit {
            proxy_pass http://audit-service/health;
            proxy_set_header Host $host;
            access_log off;
        }

        location /health/auth {
            proxy_pass http://auth-service/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # Health check general del API Gateway
        location /health {
            return 200 '{"status":"healthy","service":"api-gateway","version":"1.0.0"}\n';
            add_header Content-Type application/json;
            access_log off;
        }

        # ========================================
        # DOCUMENTACIÓN
        # ========================================
        
        # Swagger UI de cada servicio (opcional para desarrollo)
        location = /docs/user {
            proxy_pass http://user-service/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/docs/user/.* {
            rewrite ^/docs/user(/.*)$ $1 break;
            proxy_pass http://user-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /docs/nit {
            proxy_pass http://nit-validation-service/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/docs/nit/.* {
            rewrite ^/docs/nit(/.*)$ $1 break;
            proxy_pass http://nit-validation-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /docs/audit {
            proxy_pass http://audit-service/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/docs/audit/.* {
            rewrite ^/docs/audit(/.*)$ $1 break;
            proxy_pass http://audit-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /docs/auth {
            proxy_pass http://auth-service/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/docs/auth/.* {
            rewrite ^/docs/auth(/.*)$ $1 break;
            proxy_pass http://auth-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Fallback para openapi.json - redirigir al primer servicio
        # Los docs de cada servicio deberían cargar su propio openapi.json
        location = /openapi.json {
            return 404 '{"error":"OpenAPI spec not found. Access documentation via /docs/user, /docs/auth, /docs/nit, or /docs/audit"}\n';
            add_header Content-Type application/json;
        }

        # ========================================
        # ERROR PAGES
        # ========================================
        
        error_page 502 503 504 /50x.json;
        location = /50x.json {
            return 503 '{"error":"Service temporarily unavailable","message":"Please try again later"}\n';
            add_header Content-Type application/json;
        }
    }
}